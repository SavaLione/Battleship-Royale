/**
 * @file
 * @brief 
 * @author SavaLione
 * @date 30 Apr 2019
*/
/**
 * @defgroup tui_cpp TUI.cpp
 * @ingroup client
 * @{
 */
#include "TUI.h"

#include <string>
#include <cstring>

#include "curses.h"

#include "BattleshipRoyale.h"

TUI::TUI()
{
    setlocale(LC_ALL, "");
    initscr();
    start_color();
    initColor();
}

TUI::~TUI()
{
    endwin();
}

void TUI::initColor()
{
    init_pair(BR::CODE::MENU::COLOR::BLACK_BLACK, COLOR_BLACK, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::BLUE_BLACK, COLOR_BLUE, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::GREEN_BLACK, COLOR_GREEN, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::RED_BLACK, COLOR_RED, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_BLACK, COLOR_YELLOW, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_BLACK, COLOR_MAGENTA, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::CYAN_BLACK, COLOR_CYAN, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::WHITE_BLACK, COLOR_WHITE, COLOR_BLACK);

    init_pair(BR::CODE::MENU::COLOR::BLACK_BLUE, COLOR_BLACK, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::BLUE_BLUE, COLOR_BLUE, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::GREEN_BLUE, COLOR_GREEN, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::RED_BLUE, COLOR_RED, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_BLUE, COLOR_YELLOW, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_BLUE, COLOR_MAGENTA, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::CYAN_BLUE, COLOR_CYAN, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::WHITE_BLUE, COLOR_WHITE, COLOR_BLUE);

    init_pair(BR::CODE::MENU::COLOR::BLACK_GREEN, COLOR_BLACK, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::BLUE_GREEN, COLOR_BLUE, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::GREEN_GREEN, COLOR_GREEN, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::RED_GREEN, COLOR_RED, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_GREEN, COLOR_YELLOW, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_GREEN, COLOR_MAGENTA, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::CYAN_GREEN, COLOR_CYAN, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::WHITE_GREEN, COLOR_WHITE, COLOR_GREEN);

    init_pair(BR::CODE::MENU::COLOR::BLACK_RED, COLOR_BLACK, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::BLUE_RED, COLOR_BLUE, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::GREEN_RED, COLOR_GREEN, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::RED_RED, COLOR_RED, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_RED, COLOR_YELLOW, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_RED, COLOR_MAGENTA, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::CYAN_RED, COLOR_CYAN, COLOR_RED);
    init_pair(BR::CODE::MENU::COLOR::WHITE_RED, COLOR_WHITE, COLOR_RED);

    init_pair(BR::CODE::MENU::COLOR::BLACK_YELLOW, COLOR_BLACK, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::BLUE_YELLOW, COLOR_BLUE, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::GREEN_YELLOW, COLOR_GREEN, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::RED_YELLOW, COLOR_RED, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_YELLOW, COLOR_MAGENTA, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::CYAN_YELLOW, COLOR_CYAN, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::WHITE_YELLOW, COLOR_WHITE, COLOR_YELLOW);

    init_pair(BR::CODE::MENU::COLOR::BLACK_MAGENTA, COLOR_BLACK, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::BLUE_MAGENTA, COLOR_BLUE, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::GREEN_MAGENTA, COLOR_GREEN, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::RED_MAGENTA, COLOR_RED, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_MAGENTA, COLOR_YELLOW, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_MAGENTA, COLOR_MAGENTA, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::CYAN_MAGENTA, COLOR_CYAN, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::WHITE_MAGENTA, COLOR_WHITE, COLOR_MAGENTA);

    init_pair(BR::CODE::MENU::COLOR::BLACK_CYAN, COLOR_BLACK, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::BLUE_CYAN, COLOR_BLUE, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::GREEN_CYAN, COLOR_GREEN, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::RED_CYAN, COLOR_RED, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_CYAN, COLOR_YELLOW, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_CYAN, COLOR_MAGENTA, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::CYAN_CYAN, COLOR_CYAN, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::WHITE_CYAN, COLOR_WHITE, COLOR_CYAN);

    init_pair(BR::CODE::MENU::COLOR::BLACK_WHITE, COLOR_BLACK, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::BLUE_WHITE, COLOR_BLUE, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::GREEN_WHITE, COLOR_GREEN, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::RED_WHITE, COLOR_RED, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::YELLOW_WHITE, COLOR_YELLOW, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA_WHITE, COLOR_MAGENTA, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::CYAN_WHITE, COLOR_CYAN, COLOR_WHITE);
    init_pair(BR::CODE::MENU::COLOR::WHITE_WHITE, COLOR_WHITE, COLOR_WHITE);

    init_pair(BR::CODE::MENU::COLOR::BLACK, COLOR_BLACK, COLOR_BLACK);
    init_pair(BR::CODE::MENU::COLOR::BLUE, COLOR_BLUE, COLOR_BLUE);
    init_pair(BR::CODE::MENU::COLOR::GREEN, COLOR_GREEN, COLOR_GREEN);
    init_pair(BR::CODE::MENU::COLOR::RED, COLOR_RED, COLOR_RED);

    init_pair(BR::CODE::MENU::COLOR::YELLOW, COLOR_YELLOW, COLOR_YELLOW);
    init_pair(BR::CODE::MENU::COLOR::MAGENTA, COLOR_MAGENTA, COLOR_MAGENTA);
    init_pair(BR::CODE::MENU::COLOR::CYAN, COLOR_CYAN, COLOR_CYAN);
    init_pair(BR::CODE::MENU::COLOR::WHITE, COLOR_WHITE, COLOR_WHITE);
}

void TUI::colorTest()
{
    std::string msg = "A1!@#$%^&";
    int col = 0, line = 0;
    for (int i = 1; i <= BR::CODE::MENU::COLOR::WHITE; i++)
    {
        color_set(i, NULL);
        mvprintw(line, col * msg.length(), msg.c_str());
        col++;
        if (col > 3)
        {
            col = 0;
            line++;
        }
    }
    getch();
}

void TUI::locTest()
{
    std::string msg = "Привет! Тест локали!";
    mvprintw(1, 1, msg.c_str());
    getch();
}

/*
    COLOR_BLACK
    COLOR_BLUE
    COLOR_GREEN
    COLOR_RED

    COLOR_YELLOW
    COLOR_MAGENTA
    COLOR_CYAN
    COLOR_WHITE
*/

/*
    COLOR_BLACK     COLOR_BLACK
    COLOR_BLUE      COLOR_BLACK
    COLOR_GREEN     COLOR_BLACK
    COLOR_RED       COLOR_BLACK
    COLOR_YELLOW    COLOR_BLACK
    COLOR_MAGENTA   COLOR_BLACK
    COLOR_CYAN      COLOR_BLACK
    COLOR_WHITE     COLOR_BLACK

    COLOR_BLACK     COLOR_BLUE
    COLOR_BLUE      COLOR_BLUE
    COLOR_GREEN     COLOR_BLUE
    COLOR_RED       COLOR_BLUE
    COLOR_YELLOW    COLOR_BLUE
    COLOR_MAGENTA   COLOR_BLUE
    COLOR_CYAN      COLOR_BLUE
    COLOR_WHITE     COLOR_BLUE

    COLOR_BLACK     COLOR_GREEN
    COLOR_BLUE      COLOR_GREEN
    COLOR_GREEN     COLOR_GREEN
    COLOR_RED       COLOR_GREEN
    COLOR_YELLOW    COLOR_GREEN
    COLOR_MAGENTA   COLOR_GREEN
    COLOR_CYAN      COLOR_GREEN
    COLOR_WHITE     COLOR_GREEN

    COLOR_BLACK     COLOR_RED
    COLOR_BLUE      COLOR_RED
    COLOR_GREEN     COLOR_RED
    COLOR_RED       COLOR_RED
    COLOR_YELLOW    COLOR_RED
    COLOR_MAGENTA   COLOR_RED
    COLOR_CYAN      COLOR_RED
    COLOR_WHITE     COLOR_RED

    COLOR_BLACK     COLOR_YELLOW
    COLOR_BLUE      COLOR_YELLOW
    COLOR_GREEN     COLOR_YELLOW
    COLOR_RED       COLOR_YELLOW
    COLOR_YELLOW    COLOR_YELLOW
    COLOR_MAGENTA   COLOR_YELLOW
    COLOR_CYAN      COLOR_YELLOW
    COLOR_WHITE     COLOR_YELLOW

    COLOR_BLACK     COLOR_MAGENTA
    COLOR_BLUE      COLOR_MAGENTA
    COLOR_GREEN     COLOR_MAGENTA
    COLOR_RED       COLOR_MAGENTA
    COLOR_YELLOW    COLOR_MAGENTA
    COLOR_MAGENTA   COLOR_MAGENTA
    COLOR_CYAN      COLOR_MAGENTA
    COLOR_WHITE     COLOR_MAGENTA

    COLOR_BLACK     COLOR_CYAN
    COLOR_BLUE      COLOR_CYAN
    COLOR_GREEN     COLOR_CYAN
    COLOR_RED       COLOR_CYAN
    COLOR_YELLOW    COLOR_CYAN
    COLOR_MAGENTA   COLOR_CYAN
    COLOR_CYAN      COLOR_CYAN
    COLOR_WHITE     COLOR_CYAN

    COLOR_BLACK     COLOR_WHITE
    COLOR_BLUE      COLOR_WHITE
    COLOR_GREEN     COLOR_WHITE
    COLOR_RED       COLOR_WHITE
    COLOR_YELLOW    COLOR_WHITE
    COLOR_MAGENTA   COLOR_WHITE
    COLOR_CYAN      COLOR_WHITE
    COLOR_WHITE     COLOR_WHITE
*/

/** @} */