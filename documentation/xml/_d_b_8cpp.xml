<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_d_b_8cpp" kind="file" language="C++">
    <compoundname>DB.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">ctime</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">spdlog/sinks/basic_file_sink.h</includes>
    <includes local="no">picosha2.h</includes>
    <includes refid="_d_b_8h" local="yes">DB.h</includes>
    <includes refid="_battleship_royale_8h" local="yes">BattleshipRoyale.h</includes>
    <includes refid="rand__sse_8h" local="yes">rand_sse.h</includes>
    <incdepgraph>
      <node id="97">
        <label>DB.h</label>
        <link refid="_d_b_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>string</label>
      </node>
      <node id="100">
        <label>rand_sse.h</label>
        <link refid="rand__sse_8h"/>
      </node>
      <node id="95">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="99">
        <label>BattleshipRoyale.h</label>
        <link refid="_battleship_royale_8h"/>
      </node>
      <node id="98">
        <label>sqlite3.h</label>
      </node>
      <node id="96">
        <label>picosha2.h</label>
      </node>
      <node id="94">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="93">
        <label>ctime</label>
      </node>
      <node id="91">
        <label>DB.cpp</label>
        <link refid="_d_b_8cpp"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/basic_file_sink.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;picosha2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_b_8h" kindref="compound">DB.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_battleship_royale_8h" kindref="compound">BattleshipRoyale.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rand__sse_8h" kindref="compound">rand_sse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_d_b_1a29a603c52c10831cddee82518417f992" refkind="member"><highlight class="normal"><ref refid="class_d_b_1a29a603c52c10831cddee82518417f992" kindref="member">DB::DB</ref>(</highlight><highlight class="comment">/*<sp/>args<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>db_open();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(db_table_check())</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Table<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::warn(</highlight><highlight class="stringliteral">&quot;Table<sp/>not<sp/>found.<sp/>Create<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_create();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::warn(</highlight><highlight class="stringliteral">&quot;Creating<sp/>the<sp/>initial<sp/>data<sp/>in<sp/>the<sp/>database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>db_close();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_d_b_1a7bd1418f67b11d0f752537123e7e6d28" refkind="member"><highlight class="normal"><ref refid="class_d_b_1a7bd1418f67b11d0f752537123e7e6d28" kindref="member">DB::~DB</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zErrMsg;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DB::db_open()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_open(<ref refid="namespace_b_r_1a30974fa6f1a17283bd60a3bb1e9501ff" kindref="member">BR::DB_NAME</ref>,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*rc)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>database:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_errmsg(db));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Opened<sp/>database<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DB::db_close()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sqlite3_close(db);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;DataBase<sp/>close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DB::db_create()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES(1,<sp/>&apos;ZERO&apos;,<sp/>&apos;ZEROZERO&apos;,<sp/>&apos;ZERO&apos;,<sp/>1,<sp/>1,<sp/>1);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,<sp/>&apos;SavaLione&apos;,<sp/>&apos;MyOwOpass&apos;,<sp/>&apos;now&apos;,<sp/>0,<sp/>0,<sp/>7);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,<sp/>&apos;OwO&apos;,<sp/>&apos;OwO&apos;,<sp/>&apos;1234d&apos;,<sp/>0,<sp/>0,<sp/>0);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,<sp/>&apos;UwU&apos;,<sp/>&apos;UwU&apos;,<sp/>&apos;a&apos;,<sp/>0,<sp/>0,<sp/>0);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,<sp/>&apos;Hewwwoo&apos;,<sp/>&apos;Hiii&apos;,<sp/>&apos;n&apos;,<sp/>0,<sp/>0,<sp/>0);&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,<sp/>&apos;Awwww&apos;,<sp/>&apos;Awwwwwwwwwwwww&apos;,<sp/>&apos;www&apos;,<sp/>1234,<sp/>1234,<sp/>0);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_exec(db,<sp/>sql.c_str(),<sp/>NULL,<sp/>0,<sp/>&amp;messageError);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*rc<sp/>!=<sp/>SQLITE_OK)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>initial<sp/>entries<sp/>in<sp/>the<sp/>database:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_errmsg(db));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Initial<sp/>data<sp/>in<sp/>database<sp/>successfully<sp/>created.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DB::db_table_check()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CREATE<sp/>TABLE<sp/>PLAYER(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ID<sp/>INT<sp/>PRIMARY<sp/>KEY<sp/><sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT<sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PASSWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT<sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;REG_DATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT<sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SCORE<sp/>INT<sp/><sp/><sp/><sp/><sp/><sp/>KEY<sp/><sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MONEY<sp/>INT<sp/><sp/><sp/><sp/><sp/><sp/>KEY<sp/><sp/><sp/><sp/><sp/>NOT<sp/>NULL,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LEVEL<sp/>INT<sp/><sp/><sp/><sp/><sp/><sp/>KEY<sp/><sp/><sp/><sp/><sp/>NOT<sp/>NULL<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_exec(db,<sp/>sql.c_str(),<sp/>NULL,<sp/>0,<sp/>&amp;messageError);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*rc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DB::db_all_check()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL<sp/>from<sp/>PLAYER&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;ID:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_int(stmt,<sp/>0));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;NAME:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_text(stmt,<sp/>1));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;PASSWORD:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_text(stmt,<sp/>2));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;REG_DATE:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_text(stmt,<sp/>3));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;SCORE:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_int(stmt,<sp/>4));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;MONEY:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_int(stmt,<sp/>5));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;LEVEL:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_int(stmt,<sp/>6));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_d_b_1aea6044c3fffc4c31714c732bb3789f71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1aea6044c3fffc4c31714c732bb3789f71" kindref="member">DB::db_check_player</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>ID,<sp/>NAME<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::warn(</highlight><highlight class="stringliteral">&quot;DB<sp/>name:<sp/>{}<sp/>found.<sp/>ID:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_column_text(stmt,<sp/>1),<sp/>sqlite3_column_int(stmt,<sp/>0));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_d_b_1a472c425f9a22c467e4acd0e800153837" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1a472c425f9a22c467e4acd0e800153837" kindref="member">DB::db_add_player</ref>(<ref refid="structlogin" kindref="compound">login</ref><sp/>*l)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>PLAYER<sp/>(ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL)<sp/>VALUES((SELECT<sp/>max(ID)<sp/>FROM<sp/>PLAYER)<sp/>+<sp/>1,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>sha2(&amp;l-&gt;<ref refid="structlogin_1a9c4b7efff9382117bd288f9cc42a4e28" kindref="member">s_password</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><sp/>now<sp/>=<sp/>time(0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/><sp/>tstruct;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[80];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>tstruct<sp/>=<sp/>*localtime(&amp;now);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>strftime(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d.%X&quot;</highlight><highlight class="normal">,<sp/>&amp;tstruct);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;0,<sp/>0,<sp/>0);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_exec(db,<sp/>sql.c_str(),<sp/>NULL,<sp/>0,<sp/>&amp;messageError);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*rc<sp/>!=<sp/>SQLITE_OK)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>player:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Error:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>sqlite3_errmsg(db));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Player<sp/>{}<sp/>successfully<sp/>created.&quot;</highlight><highlight class="normal">,<sp/>l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_d_b_1a1e5d244a838c99a8753727cf0abd1f70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1a1e5d244a838c99a8753727cf0abd1f70" kindref="member">DB::db_get_player</ref>(std::string<sp/>*name,<sp/><ref refid="structdb__player" kindref="compound">db_player</ref><sp/>*pl)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>ID,<sp/>NAME,<sp/>PASSWORD,<sp/>REG_DATE,<sp/>SCORE,<sp/>MONEY,<sp/>LEVEL<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*name;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1adae59dcd7ab22b0e66cb829f1dc5b383" kindref="member">id</ref><sp/>=<sp/>sqlite3_column_int(stmt,<sp/>0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1a182fb42d16b91d5dccc9c640bc649521" kindref="member">name</ref><sp/>=<sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(sqlite3_column_text(stmt,<sp/>1)));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1a44fb2105fb4d116447eee76a5494821d" kindref="member">password</ref><sp/>=<sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(sqlite3_column_text(stmt,<sp/>2)));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1abef0de717f781b401effd7d3c35550c2" kindref="member">reg_date</ref><sp/>=<sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(sqlite3_column_text(stmt,<sp/>3)));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1a49a7074936df50c10ce3573663e902bc" kindref="member">score</ref><sp/>=<sp/>sqlite3_column_int(stmt,<sp/>4);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1a11f7c74a3d7b7f6c91f5ac6823c848af" kindref="member">money</ref><sp/>=<sp/>sqlite3_column_int(stmt,<sp/>5);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;<ref refid="structdb__player_1a87ec3fa495482d1018974f2694430156" kindref="member">level</ref><sp/>=<sp/>sqlite3_column_int(stmt,<sp/>6);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DB::db_get_player_print(<ref refid="structdb__player" kindref="compound">db_player</ref><sp/>*pl)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;id:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1adae59dcd7ab22b0e66cb829f1dc5b383" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;name:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1a182fb42d16b91d5dccc9c640bc649521" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;password:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1a44fb2105fb4d116447eee76a5494821d" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;reg_date:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1abef0de717f781b401effd7d3c35550c2" kindref="member">reg_date</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;score:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1a49a7074936df50c10ce3573663e902bc" kindref="member">score</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;money:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1a11f7c74a3d7b7f6c91f5ac6823c848af" kindref="member">money</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;level:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pl-&gt;<ref refid="structdb__player_1a87ec3fa495482d1018974f2694430156" kindref="member">level</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">std::string<sp/>DB::sha2(std::string<sp/>*s)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ret;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>picosha2::hash256_hex_string(*s,<sp/>ret);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_d_b_1aa8cdb5ec4f2f269d13cff52b9e47c4cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1aa8cdb5ec4f2f269d13cff52b9e47c4cb" kindref="member">DB::db_get_id</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>ID<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_ret<sp/>=<sp/>sqlite3_column_int(stmt,<sp/>0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_ret;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_d_b_1a5acc70d365de65365c861533a2b755c3" refkind="member"><highlight class="normal"><ref refid="struct_u_i_d" kindref="compound">UID</ref><sp/><ref refid="class_d_b_1a5acc70d365de65365c861533a2b755c3" kindref="member">DB::uid_get_np</ref>(<ref refid="structlogin" kindref="compound">login</ref><sp/>*l)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u_i_random[4];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__rand__ssecpp_1gab7ae3ab6c8fb3e31548413dd0154db7d" kindref="member">rand_sse</ref>(u_i_random);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_i_d" kindref="compound">UID</ref><sp/>uid_ret;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1ad126ab7d56812c322727617b427068ad" kindref="member">s_name</ref><sp/>=<sp/>l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1acf7ef2a71d9a80e890f911425e46d7f0" kindref="member">co_uid</ref>.<ref refid="struct_coockie_1af7f9283a949f25c677a061ae6a46cb76" kindref="member">id</ref><sp/>=<sp/><ref refid="class_d_b_1aa8cdb5ec4f2f269d13cff52b9e47c4cb" kindref="member">db_get_id</ref>(&amp;l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1acf7ef2a71d9a80e890f911425e46d7f0" kindref="member">co_uid</ref>.<ref refid="struct_coockie_1a25293cd2b76e85993318e02e9398bdfb" kindref="member">u_i_random</ref><sp/>=<sp/>u_i_random[0];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uid_ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253" refid="class_d_b_1a9c55abcaab4db2b421bf72c968a818a4" refkind="member"><highlight class="normal"><ref refid="struct_u_i_d" kindref="compound">UID</ref><sp/><ref refid="class_d_b_1a5acc70d365de65365c861533a2b755c3" kindref="member">DB::uid_get_np</ref>(<ref refid="structlogin" kindref="compound">login</ref><sp/>*l,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_i_d" kindref="compound">UID</ref><sp/>uid_ret;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1ad126ab7d56812c322727617b427068ad" kindref="member">s_name</ref><sp/>=<sp/>l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1acf7ef2a71d9a80e890f911425e46d7f0" kindref="member">co_uid</ref>.<ref refid="struct_coockie_1af7f9283a949f25c677a061ae6a46cb76" kindref="member">id</ref><sp/>=<sp/><ref refid="class_d_b_1aa8cdb5ec4f2f269d13cff52b9e47c4cb" kindref="member">db_get_id</ref>(&amp;l-&gt;<ref refid="structlogin_1acf93d411362f367b1fb7c35337d0606d" kindref="member">s_name</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_ret.<ref refid="struct_u_i_d_1acf7ef2a71d9a80e890f911425e46d7f0" kindref="member">co_uid</ref>.<ref refid="struct_coockie_1a25293cd2b76e85993318e02e9398bdfb" kindref="member">u_i_random</ref><sp/>=<sp/>*id;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uid_ret;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_d_b_1ad7c6310d2669acd40978fd4662f90d53" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_d_b_1ad7c6310d2669acd40978fd4662f90d53" kindref="member">DB::db_get_reg_date</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s_ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>REG_DATE<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ret<sp/>=<sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(sqlite3_column_text(stmt,<sp/>0)));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_ret;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_d_b_1a35efc0a2ff41b4ef47c88c87f20feee4" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_d_b_1a35efc0a2ff41b4ef47c88c87f20feee4" kindref="member">DB::db_get_password</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s_ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>PASSWORD<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ret<sp/>=<sp/>std::string(reinterpret_cast&lt;const<sp/>char*&gt;(sqlite3_column_text(stmt,<sp/>0)));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_ret;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="class_d_b_1a990cefb97ea7222649511f37334a8601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1a990cefb97ea7222649511f37334a8601" kindref="member">DB::db_get_score</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>SCORE<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_ret<sp/>=<sp/>sqlite3_column_int(stmt,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_ret;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_d_b_1a004b212ee48936251ff24b9f70d67dd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1a004b212ee48936251ff24b9f70d67dd0" kindref="member">DB::db_get_money</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>MONEY<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_ret<sp/>=<sp/>sqlite3_column_int(stmt,<sp/>0);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_ret;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_d_b_1a7792fdc9d2dc66bfa5ba84aa9db1ee8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_b_1a7792fdc9d2dc66bfa5ba84aa9db1ee8b" kindref="member">DB::db_get_level</ref>(std::string<sp/>*s_name)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tail;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>LEVEL<sp/>FROM<sp/>PLAYER<sp/>WHERE<sp/>NAME<sp/>=\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/>*s_name;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>*rc<sp/>=<sp/>sqlite3_prepare_v2(db,<sp/>sql.c_str(),<sp/>1000,<sp/>&amp;stmt,<sp/>&amp;tail);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(stmt)<sp/>==<sp/>SQLITE_ROW)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_ret<sp/>=<sp/>sqlite3_column_int(stmt,<sp/>0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_ret;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/server/src/DB.cpp"/>
  </compounddef>
</doxygen>
