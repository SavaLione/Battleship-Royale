<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_d_b" kind="class" language="C++" prot="public">
    <compoundname>DB</compoundname>
    <includes refid="_d_b_8h" local="no">DB.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_b_1af006c980ee986ac5c39610c9afd62087" prot="private" static="no" mutable="no">
        <type>sqlite3 *</type>
        <definition>sqlite3* DB::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
<para>База данных </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="62" column="1" bodyfile="src/server/src/DB.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_1a98c52263921eab7802f7e7ef3bb9ff1f" prot="private" static="no" mutable="no">
        <type>sqlite3_stmt *</type>
        <definition>sqlite3_stmt* DB::stmt</definition>
        <argsstring></argsstring>
        <name>stmt</name>
        <briefdescription>
<para>Необходимо для получения данных из бд </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="65" column="1" bodyfile="src/server/src/DB.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_1acd42cf1722f8e515ca708dcdff84bc33" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* DB::zErrMsg</definition>
        <argsstring></argsstring>
        <name>zErrMsg</name>
        <initializer>= new char</initializer>
        <briefdescription>
<para>Сообщение о ошибке </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="68" column="1" bodyfile="src/server/src/DB.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_1a8296a092faf547c071ed07e151f1e4d0" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* DB::rc</definition>
        <argsstring></argsstring>
        <name>rc</name>
        <initializer>= new int</initializer>
        <briefdescription>
<para>Ответ базы данных </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="71" column="1" bodyfile="src/server/src/DB.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_1a09ea7b9c2e26a2754a5fb64db3836cdb" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* DB::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <initializer>= new int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="74" column="1" bodyfile="src/server/src/DB.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_1a5f143c4e687a890164e95683113205d5" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* DB::messageError</definition>
        <argsstring></argsstring>
        <name>messageError</name>
        <briefdescription>
<para>Сообщение о ошибке </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="77" column="1" bodyfile="src/server/src/DB.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="group__dbcpp_1ga5e70db458c90e54a2d22d1167f7b52f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_open</definition>
        <argsstring>()</argsstring>
        <name>db_open</name>
        <briefdescription>
<para>Открытие базы данных </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="82" column="1" bodyfile="src/server/src/DB.cpp" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gaca4c951672c54766fdd039efd38e654b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_close</definition>
        <argsstring>()</argsstring>
        <name>db_close</name>
        <briefdescription>
<para>Закытие базы данных </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="87" column="1" bodyfile="src/server/src/DB.cpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gae7d842aa9002c6f8f7d026bcc55e88af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_create</definition>
        <argsstring>()</argsstring>
        <name>db_create</name>
        <briefdescription>
<para>Создание базы данных </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="92" column="1" bodyfile="src/server/src/DB.cpp" bodystart="85" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gaa8ad10f739676129552361075ddfc2c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DB::db_table_check</definition>
        <argsstring>()</argsstring>
        <name>db_table_check</name>
        <briefdescription>
<para>Проверка существования таблицы Player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="97" column="1" bodyfile="src/server/src/DB.cpp" bodystart="110" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga880d6118bf0b4020049339afc7e825fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_all_check</definition>
        <argsstring>()</argsstring>
        <name>db_all_check</name>
        <briefdescription>
<para>Вывод всех пользователей с информацией в консоль </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="102" column="1" bodyfile="src/server/src/DB.cpp" bodystart="136" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gade41c643f9d1e57ee02c107553877d64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_get_player_print</definition>
        <argsstring>(db_player *pl)</argsstring>
        <name>db_get_player_print</name>
        <param>
          <type><ref refid="structdb__player" kindref="compound">db_player</ref> *</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
<para>Вывод информации о пользователе по ссылке </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pl</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="108" column="1" bodyfile="src/server/src/DB.cpp" bodystart="257" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga491541bd875d5fab95aa913b970132f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DB::sha2</definition>
        <argsstring>(std::string *s)</argsstring>
        <name>sha2</name>
        <param>
          <type>std::string *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Создание sha2 по ссылке </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>строка для преобразования в sha2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sha2 сообщение </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="115" column="1" bodyfile="src/server/src/DB.cpp" bodystart="273" bodyend="278"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__dbcpp_1ga29a603c52c10831cddee82518417f992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DB::DB</definition>
        <argsstring>()</argsstring>
        <name>DB</name>
        <briefdescription>
<para>Конструктор класса </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="121" column="1" bodyfile="src/server/src/DB.cpp" bodystart="28" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga472c425f9a22c467e4acd0e800153837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_add_player</definition>
        <argsstring>(login *l)</argsstring>
        <name>db_add_player</name>
        <param>
          <type><ref refid="structlogin" kindref="compound">login</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Создать пользователя l. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">l</parametername>
</parameternamelist>
<parameterdescription>
<para>пользователь </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="127" column="1" bodyfile="src/server/src/DB.cpp" bodystart="185" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gaea6044c3fffc4c31714c732bb3789f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DB::db_check_player</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_check_player</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Проверка существования пользователя </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - пользователь существует, false - пользователь не существует. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="134" column="1" bodyfile="src/server/src/DB.cpp" bodystart="162" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga1e5d244a838c99a8753727cf0abd1f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DB::db_get_player</definition>
        <argsstring>(std::string *name, db_player *pl)</argsstring>
        <name>db_get_player</name>
        <param>
          <type>std::string *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structdb__player" kindref="compound">db_player</ref> *</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
<para>Получить карточку пользователя <ref refid="structdb__player" kindref="compound">db_player</ref> по ссылке </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pl</parametername>
</parameternamelist>
<parameterdescription>
<para>карточка пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="141" column="1" bodyfile="src/server/src/DB.cpp" bodystart="230" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gaa8cdb5ec4f2f269d13cff52b9e47c4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DB::db_get_id</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_id</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение id пользователя по имени. id уникальный </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id пользователя </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="148" column="1" bodyfile="src/server/src/DB.cpp" bodystart="285" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_1a0608c5cb7f815d143a54bda2e318de84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DB::db_check_pass</definition>
        <argsstring>(login *l)</argsstring>
        <name>db_check_pass</name>
        <param>
          <type><ref refid="structlogin" kindref="compound">login</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Проверка пароля </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">l</parametername>
</parameternamelist>
<parameterdescription>
<para>пользователь </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - пароль правильный, false - пароль не правильный. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga5acc70d365de65365c861533a2b755c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_u_i_d" kindref="compound">UID</ref></type>
        <definition>UID DB::uid_get_np</definition>
        <argsstring>(login *l)</argsstring>
        <name>uid_get_np</name>
        <param>
          <type><ref refid="structlogin" kindref="compound">login</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Получение <ref refid="struct_u_i_d" kindref="compound">UID</ref> пользователя </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">l</parametername>
</parameternamelist>
<parameterdescription>
<para>пользователь </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_u_i_d" kindref="compound">UID</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="162" column="1" bodyfile="src/server/src/DB.cpp" bodystart="308" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga9c55abcaab4db2b421bf72c968a818a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_u_i_d" kindref="compound">UID</ref></type>
        <definition>UID DB::uid_get_np</definition>
        <argsstring>(login *l, int *id)</argsstring>
        <name>uid_get_np</name>
        <param>
          <type><ref refid="structlogin" kindref="compound">login</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Получение <ref refid="struct_u_i_d" kindref="compound">UID</ref> пользователя </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">l</parametername>
</parameternamelist>
<parameterdescription>
<para>пользователь </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_u_i_d" kindref="compound">UID</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="170" column="1" bodyfile="src/server/src/DB.cpp" bodystart="327" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1gad7c6310d2669acd40978fd4662f90d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DB::db_get_reg_date</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_reg_date</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение даты регистрации по имени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>дата регистрации </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="177" column="1" bodyfile="src/server/src/DB.cpp" bodystart="342" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga35efc0a2ff41b4ef47c88c87f20feee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DB::db_get_password</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_password</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение пароля по имени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>пароль (из бд. в sha2) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="184" column="1" bodyfile="src/server/src/DB.cpp" bodystart="365" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga990cefb97ea7222649511f37334a8601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DB::db_get_score</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_score</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение результата по имени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>результат(очки) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="191" column="1" bodyfile="src/server/src/DB.cpp" bodystart="388" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga004b212ee48936251ff24b9f70d67dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DB::db_get_money</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_money</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение счёта по имени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>счёт </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="198" column="1" bodyfile="src/server/src/DB.cpp" bodystart="411" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga7792fdc9d2dc66bfa5ba84aa9db1ee8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DB::db_get_level</definition>
        <argsstring>(std::string *s_name)</argsstring>
        <name>db_get_level</name>
        <param>
          <type>std::string *</type>
          <declname>s_name</declname>
        </param>
        <briefdescription>
<para>Получение уровня доступа по имени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s_name</parametername>
</parameternamelist>
<parameterdescription>
<para>имя пользователя </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>уровень доступа </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="205" column="1" bodyfile="src/server/src/DB.cpp" bodystart="434" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group__dbcpp_1ga7bd1418f67b11d0f752537123e7e6d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DB::~DB</definition>
        <argsstring>()</argsstring>
        <name>~DB</name>
        <briefdescription>
<para>Деструктор класса </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/src/DB.h" line="210" column="1" bodyfile="src/server/src/DB.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Подключение к базе данных </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/server/src/DB.h" line="59" column="1" bodyfile="src/server/src/DB.h" bodystart="58" bodyend="211"/>
    <listofallmembers>
      <member refid="class_d_b_1af006c980ee986ac5c39610c9afd62087" prot="private" virt="non-virtual"><scope>DB</scope><name>db</name></member>
      <member refid="group__dbcpp_1ga29a603c52c10831cddee82518417f992" prot="public" virt="non-virtual"><scope>DB</scope><name>DB</name></member>
      <member refid="group__dbcpp_1ga472c425f9a22c467e4acd0e800153837" prot="public" virt="non-virtual"><scope>DB</scope><name>db_add_player</name></member>
      <member refid="group__dbcpp_1ga880d6118bf0b4020049339afc7e825fd" prot="private" virt="non-virtual"><scope>DB</scope><name>db_all_check</name></member>
      <member refid="class_d_b_1a0608c5cb7f815d143a54bda2e318de84" prot="public" virt="non-virtual"><scope>DB</scope><name>db_check_pass</name></member>
      <member refid="group__dbcpp_1gaea6044c3fffc4c31714c732bb3789f71" prot="public" virt="non-virtual"><scope>DB</scope><name>db_check_player</name></member>
      <member refid="group__dbcpp_1gaca4c951672c54766fdd039efd38e654b" prot="private" virt="non-virtual"><scope>DB</scope><name>db_close</name></member>
      <member refid="group__dbcpp_1gae7d842aa9002c6f8f7d026bcc55e88af" prot="private" virt="non-virtual"><scope>DB</scope><name>db_create</name></member>
      <member refid="group__dbcpp_1gaa8cdb5ec4f2f269d13cff52b9e47c4cb" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_id</name></member>
      <member refid="group__dbcpp_1ga7792fdc9d2dc66bfa5ba84aa9db1ee8b" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_level</name></member>
      <member refid="group__dbcpp_1ga004b212ee48936251ff24b9f70d67dd0" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_money</name></member>
      <member refid="group__dbcpp_1ga35efc0a2ff41b4ef47c88c87f20feee4" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_password</name></member>
      <member refid="group__dbcpp_1ga1e5d244a838c99a8753727cf0abd1f70" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_player</name></member>
      <member refid="group__dbcpp_1gade41c643f9d1e57ee02c107553877d64" prot="private" virt="non-virtual"><scope>DB</scope><name>db_get_player_print</name></member>
      <member refid="group__dbcpp_1gad7c6310d2669acd40978fd4662f90d53" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_reg_date</name></member>
      <member refid="group__dbcpp_1ga990cefb97ea7222649511f37334a8601" prot="public" virt="non-virtual"><scope>DB</scope><name>db_get_score</name></member>
      <member refid="group__dbcpp_1ga5e70db458c90e54a2d22d1167f7b52f7" prot="private" virt="non-virtual"><scope>DB</scope><name>db_open</name></member>
      <member refid="group__dbcpp_1gaa8ad10f739676129552361075ddfc2c9" prot="private" virt="non-virtual"><scope>DB</scope><name>db_table_check</name></member>
      <member refid="class_d_b_1a09ea7b9c2e26a2754a5fb64db3836cdb" prot="private" virt="non-virtual"><scope>DB</scope><name>id</name></member>
      <member refid="class_d_b_1a5f143c4e687a890164e95683113205d5" prot="private" virt="non-virtual"><scope>DB</scope><name>messageError</name></member>
      <member refid="class_d_b_1a8296a092faf547c071ed07e151f1e4d0" prot="private" virt="non-virtual"><scope>DB</scope><name>rc</name></member>
      <member refid="group__dbcpp_1ga491541bd875d5fab95aa913b970132f6" prot="private" virt="non-virtual"><scope>DB</scope><name>sha2</name></member>
      <member refid="class_d_b_1a98c52263921eab7802f7e7ef3bb9ff1f" prot="private" virt="non-virtual"><scope>DB</scope><name>stmt</name></member>
      <member refid="group__dbcpp_1ga5acc70d365de65365c861533a2b755c3" prot="public" virt="non-virtual"><scope>DB</scope><name>uid_get_np</name></member>
      <member refid="group__dbcpp_1ga9c55abcaab4db2b421bf72c968a818a4" prot="public" virt="non-virtual"><scope>DB</scope><name>uid_get_np</name></member>
      <member refid="class_d_b_1acd42cf1722f8e515ca708dcdff84bc33" prot="private" virt="non-virtual"><scope>DB</scope><name>zErrMsg</name></member>
      <member refid="group__dbcpp_1ga7bd1418f67b11d0f752537123e7e6d28" prot="public" virt="non-virtual"><scope>DB</scope><name>~DB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
