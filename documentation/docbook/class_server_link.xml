<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_server_link">
<title>Класс ServerLink</title>
<indexterm><primary>ServerLink</primary></indexterm>
<para>
<computeroutput>#include &lt;Client.h&gt;</computeroutput>
</para>
Граф наследования:ServerLink:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_server_link__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Граф связей класса ServerLink:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_server_link__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые типы    </title>
        <itemizedlist>
            <listitem><para>typedef shared_ptr&lt; <link linkend="_class_server_link">ServerLink</link> &gt; <link linkend="_class_server_link_1afb05b9f4060b17ac50d2fb3b874ce236">ptr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_server_link_1a2f551c4fffbedab55adab3d528df0f0c">IsConnected</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_server_link_1ab79487df49a22e5533c96032ef413e16">IsSending</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_server_link_1a9cdc703cdda0ff80c49434d483654d7e">IsReading</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_server_link_1a712791c09323fcf6db49ceb0a10f8d9c">Message</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_server_link_1afa570df0c508889210e9ac2ff5983306">Disconnect</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_server_link_1accf9e304c68111f1dbb1df82e2ae3ca5">Send</link> (const std::string &amp;msg)</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_server_link_1a57df20ef340ea6f42157ff40aa57427a">ReadComplete</link> (const system::error_code &amp;error, size_t bytes)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Открытые статические члены    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_server_link_1afb05b9f4060b17ac50d2fb3b874ce236">ptr</link> <link linkend="_class_server_link_1a72edc7fb4b20cc9bd157863b2ee4b279">Start</link> (ip::tcp::endpoint ep)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>
<para>
См. определение в файле Client.h строка 16</para>
</section>
<section>
<title>Определения типов</title>
<anchor xml:id="_class_server_link_1afb05b9f4060b17ac50d2fb3b874ce236"/>    <section>
    <title>ptr</title>
<indexterm><primary>ptr</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>ptr</secondary></indexterm>
<para><computeroutput>typedef shared_ptr&lt;<link linkend="_class_server_link">ServerLink</link>&gt; <link linkend="_class_server_link_1afb05b9f4060b17ac50d2fb3b874ce236">ServerLink::ptr</link></computeroutput></para><para>
См. определение в файле Client.h строка 19</para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_server_link_1afa570df0c508889210e9ac2ff5983306"/>    <section>
    <title>Disconnect()</title>
<indexterm><primary>Disconnect</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>Disconnect</secondary></indexterm>
<para><computeroutput>void ServerLink::Disconnect ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 33</para>
    </section><anchor xml:id="_class_server_link_1a2f551c4fffbedab55adab3d528df0f0c"/>    <section>
    <title>IsConnected()</title>
<indexterm><primary>IsConnected</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>IsConnected</secondary></indexterm>
<para><computeroutput>bool ServerLink::IsConnected ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 21</para>
    </section><anchor xml:id="_class_server_link_1a9cdc703cdda0ff80c49434d483654d7e"/>    <section>
    <title>IsReading()</title>
<indexterm><primary>IsReading</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>IsReading</secondary></indexterm>
<para><computeroutput>bool ServerLink::IsReading ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 23</para>
    </section><anchor xml:id="_class_server_link_1ab79487df49a22e5533c96032ef413e16"/>    <section>
    <title>IsSending()</title>
<indexterm><primary>IsSending</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>IsSending</secondary></indexterm>
<para><computeroutput>bool ServerLink::IsSending ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 22</para>
    </section><anchor xml:id="_class_server_link_1a712791c09323fcf6db49ceb0a10f8d9c"/>    <section>
    <title>Message()</title>
<indexterm><primary>Message</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>Message</secondary></indexterm>
<para><computeroutput>std::string ServerLink::Message ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 24</para>
    </section><anchor xml:id="_class_server_link_1a57df20ef340ea6f42157ff40aa57427a"/>    <section>
    <title>ReadComplete()</title>
<indexterm><primary>ReadComplete</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>ReadComplete</secondary></indexterm>
<para><computeroutput>size_t ServerLink::ReadComplete (const system::error_code &amp; error, size_t bytes)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 49</para>
    </section><anchor xml:id="_class_server_link_1accf9e304c68111f1dbb1df82e2ae3ca5"/>    <section>
    <title>Send()</title>
<indexterm><primary>Send</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>Send</secondary></indexterm>
<para><computeroutput>void ServerLink::Send (const std::string &amp; msg)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 40</para>
    </section><anchor xml:id="_class_server_link_1a72edc7fb4b20cc9bd157863b2ee4b279"/>    <section>
    <title>Start()</title>
<indexterm><primary>Start</primary><secondary>ServerLink</secondary></indexterm>
<indexterm><primary>ServerLink</primary><secondary>Start</secondary></indexterm>
<para><computeroutput>static <link linkend="_class_server_link_1afb05b9f4060b17ac50d2fb3b874ce236">ptr</link> ServerLink::Start (ip::tcp::endpoint ep)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
См. определение в файле Client.h строка 26</para>
</section>
<para>
Объявления и описания членов класса находятся в файле:</para>
<link linkend="__client_8h">Client.h</link></section>
</section>
